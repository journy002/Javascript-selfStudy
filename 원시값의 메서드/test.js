// ** 원시값의 메소드 ** //

// 자바스크립트는 원시값(문자열, 숫자 등)을 마치 객체처럼 다룰 수 있게 해줍니다. 원시값에도 객체에서처럼 메서드를 호출할 수 있죠.
// 원시값의 메서드에 대해선 곧 학습할 예정인데 그 전에, 원시값은 객체가 아니란 것을 상기하도록 합시다.

let str = 'Hello'

str.test = 5
console.log(str)
console.log(str.test)

// 원시값

// 원시형 값입니다.
// 원시형의 종류는 문자(string), 숫자(number), bigint, 불린(boolean), 심볼(symbol), null, undefined형으로 총 일곱 가지 입니다.

// 객체

// 프로퍼티에 다양한 종류의 값을 저장할 수 있습니다.
// {name : "John", age : 30}와 같이 대괄호 {}를 사용해 만들 수 있습니다.
// 자바스크립트에는 여러 종류의 객체가 있는데, 함수도 객체의 일종입니다.

// 객체의 장점 중 하나는 함수를 프로퍼티로 저장할 수 있다는 것 입니다.

let john = {
  name: 'John',
  sayHi: function () {
    // alert('친구야 반갑다!')
  },
}

john.sayHi() // 친구야 반갑다!

// 객체 john을 만들고, 거기에 메서드 sayHi를 정의해보았습니다.

// 자바스크립트는 날짜, 오류, HTML 요소(HTML element) 등을 다룰 수 있게 해주는 다양한 내장 객체를 제공합니다. 이 객체들은 고유한 프로퍼티와 메서드를 가집니다.

// 하지만, 이런 기능을 사용하면 시스템 자원이 많이 소모된다는 단점이 있습니다.

// 객체는 원시값보다 “무겁고”, 내부 구조를 유지하기 위해 추가 자원을 사용하기 때문입니다.
